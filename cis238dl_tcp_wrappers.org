
#+TITLE: Getting Down with TCP Wrappers
#+AUTHOR:    Dennis Kibbe
#+EMAIL:     dennis.kibbe@mesacc.edu
#+DESCRIPTION: How to use TCP Wrappers to secure internet services.
#+KEYWORDS: TCP Wrapper, cis238dl
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+STYLE: <link rel="stylesheet" type="text/css" href="http://www.w3.org/StyleSheets/Core/Oldstyle" /> 
#+STYLE: <style type="text/css"> pre {font-size: 80%; font-weight:bold; line-height: 120%; padding-top: 0.2em; padding-bottom: 0.2em; padding-left: 1em; padding-right: 1em; border-style: solid; border-left-width: 1em; border-top-width: thin; border-right-width: thin; border-bottom-width: thin; border-color: #95ABD0; color: #00428c; background-color: #e4e5e7;} </style>
#+STYLE: <style type="text/css"> code {color: blue; font-weight:bold;} </style>
#+LINK_UP: cis238dl.html   
#+LINK_HOME: index.html
#+LINK: wrappers-1 ./img/tcp_wrap_diagram.png
#+XSLT:

#+CAPTION: This is the caption for the next figure link (or table)
#+NAME:   fig:SED-HR4049
[[wrappers-1]]

* Assignment Objectives

  TCP Wrappers provides an extra layer of security for network services by allowing fine-grained control on what hosts can connect to a server.  In this assignment you will use TCP Wrappers to allow or deny access to the SSH server.

/After You have successfully completed this assignment you will be able to:/

1. Selectively deny access based on IP address.
2. Selectively allow access based on IP address
3. Explain the function of the xinetd server.
4. Use ldd to determine if a service is protected by TCP Wrappers.

* Terms and Commands You Should Know

- /etc/hosts.allow :: Allow rules go here.
- /etc/hosts.deny :: Deny rules go here.
- ldd :: Print shared library dependencies
- xinetd :: Extended Internet services daemon

* Preparation

1. Start a CentOS 7 virtual machine by importing the centos7.ova.
2. Make sure the SSH daemon is running and the virtual machine is on the classroom network (192.168.xxx.xxx)
3. Create a snapshot of the virtual machine so you can roll back any errors.
4. You can find the most up to date version of this assignment on [[http://dennisk.freeshell.org/][my web site]].

* START ASSIGNMENT!!

CentOS protects most network services with TCP Wrapper.  You can use the ~ldd~ command to determine if OpenSSH is linked to TCP Wrappers:

#+BEGIN_EXAMPLE
# ldd /usr/sbin/sshd | grep libwrap
libwrap.so.0 => /lib64/linwrap.so.0
#+END_EXAMPLE

* /etc/hosts.allow

The =/etc/hosts.allow= file is read before the =/etc/hosts.deny= file and rules are applied from the top down.  If no rules for the service are found in either file, or if neither file exists, access to the service is granted.  Remember for the last rule to effective there must be a blank line below it.

1. Place this line in =/etc/hosts.allow=.  Use the IP address of the host you will be using to connect to the server.  sshd : 192.168.201.123
2. Place a blank line below the rule.
3. Try logging in from another virtual machine or from the Windows host using PuTTY. The login should succeed.

* /etc/hosts.deny

1. Add a line to =/etc/hosts.deny= that will deny all connections to the SSH server.  sshd : ALL
2. Place a blank line below the rule.
3. Try to log in again. The login should still succeed since the rule in =/etc/hosts.allow= is applied first.
4. Comment out the rule in =/etc/hosts.allow= and try again to log in. This time the log in should fail.

* One File Rules Them All

Both allow and deny rules can be put in a single files either =/etc/hosts.allow= or =/etc/hosts.deny= by using the proper format.

#+BEGIN_EXAMPLE
sshd,vsftpd : ALL \ : deny \ : except 192.168.201.123
#+END_EXAMPLE

* Setting a Trap with Twist

Set a trap for the bad guys!

#+BEGIN_EXAMPLE
vsftpd : 192.168. \ : twist /bin/echo "421 This domain has been black-listed. Access denied!"
#+END_EXAMPLE

* COMMENT On Your Own

* Common Mistakes

- The most common problem is not putting a new blank line after the last rule.
- Check rule order and for conflicting rules in =/etc/hosts.allow= and =/etc/hosts.deny=.

* What to Submit

Copy and paste these questions in the text submission box.

1. What is the most common mistake made with TCP Wrappers?
2. In what order are the rules in the =/etc/hosts.allow= and =/etc/hosts.deny= files processed?
3. If you have *sshd: ALL* in both =/etc/hosts.allow= and =/etc/hosts.deny= will SSH connections be allowed? Why?
4. What will this rule in =/etc/hosts.allow= do?  *sshd : 192.168.201 EXCEPT 192.168.201.123* 
5. In =/etc/hosts.deny=?

* Resources

- [[centos_wrappers:][CentOS Documentation]]
- [[xinetd:][xinetd]]
- [[ibm_sshsecurity:][Getting Started with SSH Security and Configuration]]
- [[ibm_tcpwrapper:][Using TCP Wrappers to Control Access]]
- man hosts.allow
- man hosts.deny

*  Creative Commons License

#+BEGIN_HTML
<a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/">
<img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" /></a><br />
This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike 4.0 International License</a>.
#+END_HTML

-----
