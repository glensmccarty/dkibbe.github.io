#+SETUPFILE: ~/.emacs.d/org-templates/level-0.org
#+TITLE:  Shell Scripting
#+DESCRIPTION: 
#+KEYWORDS: cis238dl bash
#+LINK: shellcheck http://shellcheck.net

* Overview

  The Linux shell has a powerful scripting language.  Any command you can run at the prompt you can put into a script to automate it for later use.

* Assignment Objectives

  /When you have successfully completed this assignment you will be able to:/

  - Lists the parts of a shell script.
  - Explain the function of the Shebang line.
  - Create a simple shell script.
  - Make the script executable.

* COMMENT Terms You Should Know

  - `chmod` :: 
  - Shebang :: 
  - POSIX :: 

* COMMENT Preparation

  Create a new directory in your home directory for the scripts you create.

  : $ mkdir ~/bin

  If the directory isn't part of your PATH you can add it temporary with this command.

  : $ PATH=$PATH:/home/tux/bin

** COMMENT The ~/bin Directory

* Variables

** The SHELL Environmental Variable

  A Linux user has several shell to choose from.  On most Linux systems the default shell is bash -- The Bourne Again SHell.  The SHELL variable determines the default shell a user has.

#+BEGIN_EXAMPLE
$ echo $SHELL
/bin/bash
#+END_EXAMPLE

** Using Variables in a Script

#+BEGIN_EXAMPLE
#!/bin/bash
echo "What is your name?"
read name
echo "How do you do, $name."
read remark
echo "I am $remark too!"
#+END_EXAMPLE

* The Shebang Line

  Every script should start with a shebang line that tells the shell what kind of script it is.  The most common shebang line is *#!/bin/bash*.  However a more portable shebang line is *#!/bin/env bash*.

* Comments

  Every script should be well commented.  Scripts grow over time, change hands and the original programmer either forgets what the script does or can no longer be found.  The comment character for bash is the pound or hash (*#*) sign.

#+BEGIN_EXAMPLE
#!/bin/bash
/bin/pwd
# Print Working Directory
#+END_EXAMPLE

* Running the Script

  Save the script with a meaningful name and optionally the *.sh* extension.  The extension will identify the file as a script and most text editors will apply the correct syntax highlighting.

  Execute the script with the =sh= or =bash= command or make the script executable and run it directly from the shell.

#+BEGIN_EXAMPLE
$ chmod +x myscript.sh
$ ./myscript.sh
#+END_EXAMPLE

Your PATH variable may include a *~/bin* directory.  If it does that would be a good place to keep your scripts.

* COMMENT Tests

  It always a good idea to test for a condition.

#+BEGIN_EXAMPLE
if [ -f .bash_profile ]; then
    echo "You have a .bash_profile. Things are fine."
else
    echo "Yikes! You have no .bash_profile!"
fi
#+END_EXAMPLE

#+BEGIN_EXAMPLE
#!/bin/bash
# test for file
if [ -f foobar ]
then mv foobar barfoo 2>/dev/null
else echo file does not exist
fi
#+END_EXAMPLE

* COMMENT Troubleshoot the Assignment

* Testing the Script

  You can test the execution of a script by running it it with the =bash -x= command.

#+BEGIN_EXAMPLE
dennisk@clevo:~$ bash -x test.sh 
+ '[' -f foobar ']'
+ mv foobar barfoo
#+END_EXAMPLE

#+BEGIN_EXAMPLE
dennisk@clevo:~$ bash -x test.sh 
+ '[' -f foobar ']'
+ echo file does not exist
#+END_EXAMPLE

* What to Submit

Copy and paste these questions along with your answers into the submission text-box (not the comment box) to receive credit for this assignment.

1. Create a variable named MYVAR with a value of hamster

2. Create a script that copies foobar to ~/temp and test that ~/temp exists. 

* COMMENT XKCD

  [[https://sslimgs.xkcd.com/comics/packages.png]]

* Resources

  - [[http://www.ibm.com/developerworks/aix/library/au-getstartedbash/][Bash scripting for beginning system administrators]]
  - [[http://linuxcommand.org][LinuxCommand.org]]
  - [[http://www.maricopa.edu/curriculum/A-C/042cis239dl.html][Linux Shell Scripting]]
  - [[https://en.wikibooks.org/wiki/Bash_Shell_Scripting][Bash Shell Scripting - Wikibooks]]
  - [[https://www.gnu.org/software/bash/manual/bashref.html][Bash Reference Manual]]
  - [[http://bash.cyberciti.biz/guide/Main_Page][Linux Shell Scripting Tutorial]]
  - [[https://google.github.io/styleguide/shell.xml][Google Shell Script Style Guide]]
  - [[https://en.wikipedia.org/wiki/POSIX][POSIX]]
  - [[shellcheck][ShellCheck]]
